package com.cyc.session;

/*
 * #%L
 * File: CycServerInfo.java
 * Project: Core API Specification
 * %%
 * Copyright (C) 2013 - 2015 Cycorp, Inc
 * %%
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * #L%
 */

/**
 * Provides basic information about the state and location of the server to
 * which the CycSession is connected (or was connected.) All data 
 * returned should be generated by examining the current session connection, or
 * retrieved from the server. 
 * 
 * Some methods may cache their values, but most will not; any caching behaviors
 * will be declared in the method's Javadoc comment. Methods should 
 * <strong>never</strong> parrot any values from the session's 
 * {@link CycSessionConfiguration}.
 * 
 * @author nwinant
 */
public interface CycServerInfo {
  
  /**
   * Returns the address of the server the Session is actually connected to (or
   * was connected to). It should <strong>not</strong> simply parrot the value of 
   * {@link CycSessionConfiguration#getRawServer()}. If the CycSession has not
   * been initialized (i.e., <code>getStatus().equals(SessionStatus.UNINITIALIZED)</code>)
   * this method should return <code>null</code>.
   * 
   * @return CycServer address of server connected to, or null if CycSession is uninitialized.
   */
  CycServer getCycServer();
    
  /**
   * Returns the browser URL for the Cyc image that this CycSession is connected
   * to, as the URL would be seen from the machine where the CycSession is running.
   * Note that if there is a firewall, port-forwarding or other indirection between
   * the browser and the machine where this CycSession is situated, the URL returned
   * may not be functional.
   * 
   * @return browser URL
   */
  String getBrowserUrl();

  /**
   * Returns the KB version string (KBNum.OperationCount) for the Cyc server.
   *
   * @return the Cyc KB version string.
   *
   * @throws SessionCommunicationException if a communications error occurs or the Cyc server cannot be found.
   * @throws SessionCommandException if an error occurs in issuing a command to the Cyc server.
   */
  String getCycKBVersionString() throws SessionCommunicationException, SessionCommandException;
  
  /**
   * Returns the Cyc revision string (akin to the build number).
   *
   * @return the Cyc revision string for the Cyc server.
   *
   * @throws SessionCommunicationException if a communications error occurs or the Cyc server cannot be found.
   * @throws SessionCommandException if an error occurs in issuing a command to the Cyc server.
   */
  String getCycRevisionString() throws SessionCommunicationException, SessionCommandException;

  /**
   * Determines whether the server is expected to be fully compatible with this API.
   * Note that there are a number of factors which may effect compatibility, so
   * this answer should be construed as an expectation, not a guarantee. Likewise, a result
   * of false does not mean that the server is completely incompatible with the API,
   * but some functionality may be missing or broken.
   * 
   * @return boolean
   * 
   * @throws SessionCommunicationException if a communications error occurs or the Cyc server cannot be found.
   * @throws SessionCommandException if an error occurs in issuing a command to the Cyc server.
   */
  boolean isAPICompatible() throws SessionCommunicationException, SessionCommandException;
  
  /**
   * Returns true if this KB is an OpenCyc image.
   *
   * @return true if this KB is an OpenCyc image, otherwise false
   *
   * @throws SessionCommunicationException if a communications error occurs or the Cyc server cannot be found.
   * @throws SessionCommandException if an error occurs in issuing a command to the Cyc server.
   */
  boolean isOpenCyc() throws SessionCommunicationException, SessionCommandException;
}
